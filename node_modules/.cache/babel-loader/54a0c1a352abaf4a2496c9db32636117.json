{"ast":null,"code":"var _jsxFileName = \"/home/alberttgomes/UniqueEvents/FrontEndPortal/src/components/Pages/Registration.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport '../../App.css'; //import { makeStyles } from '@material-ui/styles';\n\nimport { TextField, Box, Button, Divider } from '@material-ui/core'; //import { useTheme } from '@material-ui/core/styles';\n\nimport apiClient from './http-common'; //import { useQuery } from \"react-query\";\n\nimport { useState, useEffect } from 'react';\nimport { useMutation } from 'react-query';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport Radio from '@mui/material/Radio';\nimport { styled } from '@mui/material/styles';\nimport HelpOutlineSharpIcon from '@mui/icons-material/HelpOutlineSharp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Item = styled(Paper)(_ref => {\n  let {\n    theme\n  } = _ref;\n  return { ...theme.typography.body2,\n    padding: theme.spacing(1),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  };\n});\nconst [value, setValue] = React.useState('Controlled');\n\nconst handleChange = event => {\n  setValue(event.target.value);\n}; // const useStyles = makeStyles((theme) =>  ({\n//     grow: {\n//       flexGrow:1,\n//     },\n//     buttonContinue: {\n//         flexGrow: 2,\n//         paddingTop: theme.spacing(2),\n//         color:\"#fff\",\n//         background: \"#26319a\",\n//     },\n// }));\n\n\nfunction Registration() {\n  _s();\n\n  //const classes = useStyles();\n  //const theme = useTheme();\n  const [chose, setChose] = useState(null);\n\n  const alertHelp = () => {\n    return alert(\"Você deve escolher a versão que deseja participar do evento.\" + \"\\n\" + \"Se VR, fique atento ao seu regulamento de uso!\");\n  };\n\n  const [postFirstName, setPostFirstName] = useState(\"\");\n  const [postLastName, setPostLastName] = useState(\"\");\n  const [postNameCompany, setPostNameCompany] = useState(\"\");\n  const [postOffice, setPostOffice] = useState(\"\");\n  const [postEmail, setPostEmail] = useState(\"\");\n  const [postPhone, setPostPhone] = useState(\"\");\n  const [postPassword, setPostPassword] = useState(\"\");\n  const [postCheckPassword, setPostCheckPassword] = useState(\"\");\n  const [postResult, setPostResult] = useState(null);\n\n  const fortmatResponse = res => {\n    return JSON.stringify(res, null, 2);\n  };\n\n  const {\n    isLoading: isPostingParticipant,\n    mutate: postParticipant\n  } = useMutation(async () => {\n    return await apiClient.post(`/participants`, {\n      firstName: postFirstName,\n      lastName: postLastName,\n      companyName: postNameCompany,\n      job: postOffice,\n      email: postEmail,\n      phone: postPhone,\n      password: postPassword\n    });\n  } // {\n  //   onSuccess: (res) => {\n  //     const result = {\n  //       status: res.status + \"-\" + res.statusText,\n  //       headers: res.headers,\n  //       data: res.data,\n  //   };\n  //     setPostResult(fortmatResponse(result));\n  //   },\n  //   onError: (err) => {\n  //     setPostResult(fortmatResponse(err.response?.data || err));\n  //   },\n  // }\n  );\n  useEffect(() => {\n    if (isPostingParticipant) setPostResult(\"posting...\");\n  }, [isPostingParticipant]);\n  console.log([isPostingParticipant]);\n\n  function postData() {\n    try {\n      postParticipant();\n    } catch (err) {\n      //setPostResult(fortmatResponse(err));\n      console.log(err);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"formulario\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"boxRegisterWhite\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"boxRegister\",\n        p: 8,\n        sx: {\n          width: 600,\n          maxWidth: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Preencha todos os campos \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField //className = {classes.textBox}\n        , {\n          value: postFirstName,\n          onChange: e => setPostFirstName(e.target.value),\n          size: \"small\",\n          fullWidth: true,\n          label: \"Nome\",\n          id: \"firstName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(TextField //className = {classes.textBox}\n        , {\n          value: postLastName,\n          onChange: e => setPostLastName(e.target.value),\n          size: \"small\",\n          fullWidth: true,\n          label: \"Sobrenome\",\n          id: \"fullWidth\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(TextField //className = {classes.textBox}\n        , {\n          value: postNameCompany,\n          onChange: e => setPostNameCompany(e.target.value),\n          size: \"small\",\n          fullWidth: true,\n          label: \"Nome da empresa\",\n          id: \"fullWidth\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(TextField //className = {classes.textBox} \n        , {\n          value: postOffice,\n          onChange: e => setPostOffice(e.target.value),\n          size: \"small\",\n          fullWidth: true,\n          label: \"Cargo\",\n          id: \"fullWidth\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(TextField //className = {classes.textBox} \n        , {\n          value: postEmail,\n          onChange: e => setPostEmail(e.target.value),\n          size: \"small\",\n          fullWidth: true,\n          label: \"E-mail corporativo\",\n          id: \"fullWidth\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(TextField //className = {classes.textBox} \n        , {\n          value: postPhone,\n          onChange: event => setPostPhone(event.target.value),\n          size: \"small\",\n          fullWidth: true,\n          label: \"Telefone\",\n          id: \"fullWidth\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(TextField //className = {classes.textBox}\n        , {\n          value: postPassword,\n          type: \"password\",\n          size: \"small\",\n          onChange: e => setPostPassword(e.target.value),\n          fullWidth: true,\n          label: \"Senha\",\n          id: \"fullWidth\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(TextField //className = {classes.textBox} \n        , {\n          value: postCheckPassword,\n          onChange: e => setPostCheckPassword(e.target.value),\n          size: \"small\",\n          fullWidth: true,\n          type: \"password\",\n          label: \"Confirmar senha\",\n          id: \"fullWidth\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"boxRegister\",\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Escolha vers\\xE3o\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            flexGrow: 1\n          },\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            columns: 8,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              children: /*#__PURE__*/_jsxDEV(Item, {\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"/FOTOS/vr1.png\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 230,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Radio, {\n                  value: \"VR\",\n                  checked: chose === \"VR\",\n                  onChange: event => setChose(event.target.value),\n                  name: \"option\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 23\n                }, this), \" VR\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              children: /*#__PURE__*/_jsxDEV(Item, {\n                children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                  src: \"/FOTOS/pc1.png\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Radio, {\n                  value: \"Desktop\",\n                  checked: chose === \"Desktop\",\n                  onChange: event => setChose(event.target.value),\n                  name: \"option\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 23\n                }, this), \" Desktop\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 15\n        }, this), chose === \"VR\" && /*#__PURE__*/_jsxDEV(Box, {\n          className: \"address\",\n          children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Preencha seu endere\\xE7o\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 253,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            component: \"form\",\n            sx: {\n              '& .MuiTextField-root': {\n                m: 1,\n                width: '25ch'\n              }\n            },\n            noValidate: true,\n            autoComplete: \"off\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(TextField, {\n                id: \"outlined-multiline-flexible\",\n                label: \"Multiline\",\n                multiline: true,\n                maxRows: 4,\n                value: value,\n                onChange: handleChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"outlined-textarea\",\n                label: \"Multiline Placeholder\",\n                placeholder: \"Placeholder\",\n                multiline: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 27\n              }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                id: \"outlined-multiline-static\",\n                label: \"Multiline\",\n                multiline: true,\n                rows: 4,\n                defaultValue: \"Default Value\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 27\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 255,\n            columnNumber: 23\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(Button //className= {classes.buttonContinue} \n      , {\n        variant: \"contained\",\n        id: \"buttonForm\",\n        onClick: postData,\n        children: \"Cadastrar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Registration, \"+YYtKFu6DYiqe9dElp+dA0DcTsM=\", false, function () {\n  return [useMutation];\n});\n\n_c = Registration;\nexport default Registration;\n\nvar _c;\n\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"sources":["/home/alberttgomes/UniqueEvents/FrontEndPortal/src/components/Pages/Registration.jsx"],"names":["React","TextField","Box","Button","Divider","apiClient","useState","useEffect","useMutation","Paper","Grid","Radio","styled","HelpOutlineSharpIcon","Item","theme","typography","body2","padding","spacing","textAlign","color","palette","text","secondary","value","setValue","handleChange","event","target","Registration","chose","setChose","alertHelp","alert","postFirstName","setPostFirstName","postLastName","setPostLastName","postNameCompany","setPostNameCompany","postOffice","setPostOffice","postEmail","setPostEmail","postPhone","setPostPhone","postPassword","setPostPassword","postCheckPassword","setPostCheckPassword","postResult","setPostResult","fortmatResponse","res","JSON","stringify","isLoading","isPostingParticipant","mutate","postParticipant","post","firstName","lastName","companyName","job","email","phone","password","console","log","postData","err","width","maxWidth","e","flexGrow","m"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,eAAP,C,CACA;;AACA,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,MAAzB,EAAiCC,OAAjC,QAAgD,mBAAhD,C,CACA;;AACA,OAAOC,SAAP,MAAsB,eAAtB,C,CACA;;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,SAASC,MAAT,QAAuB,sBAAvB;AACA,OAAOC,oBAAP,MAAiC,sCAAjC;;AAEA,MAAMC,IAAI,GAAGF,MAAM,CAACH,KAAD,CAAN,CAAc;AAAA,MAAC;AAAEM,IAAAA;AAAF,GAAD;AAAA,SAAgB,EACzC,GAAGA,KAAK,CAACC,UAAN,CAAiBC,KADqB;AAEzCC,IAAAA,OAAO,EAAEH,KAAK,CAACI,OAAN,CAAc,CAAd,CAFgC;AAGzCC,IAAAA,SAAS,EAAE,QAH8B;AAIzCC,IAAAA,KAAK,EAAEN,KAAK,CAACO,OAAN,CAAcC,IAAd,CAAmBC;AAJe,GAAhB;AAAA,CAAd,CAAb;AAOA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoB1B,KAAK,CAACM,QAAN,CAAe,YAAf,CAA1B;;AAEE,MAAMqB,YAAY,GAAIC,KAAD,IAAW;AAC9BF,EAAAA,QAAQ,CAACE,KAAK,CAACC,MAAN,CAAaJ,KAAd,CAAR;AACD,CAFD,C,CAIF;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,SAASK,YAAT,GAAwB;AAAA;;AAEhB;AACA;AACI,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoB1B,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAM2B,SAAS,GAAG,MAAM;AACrB,WAAOC,KAAK,CAAC,iEAAiE,IAAjE,GAAwE,gDAAzE,CAAZ;AACF,GAFD;;AAIA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoC9B,QAAQ,CAAC,EAAD,CAAlD;AACA,QAAM,CAAC+B,YAAD,EAAeC,eAAf,IAAkChC,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAACiC,eAAD,EAAkBC,kBAAlB,IAAwClC,QAAQ,CAAC,EAAD,CAAtD;AACA,QAAM,CAACmC,UAAD,EAAaC,aAAb,IAA8BpC,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACqC,SAAD,EAAYC,YAAZ,IAA4BtC,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACuC,SAAD,EAAYC,YAAZ,IAA4BxC,QAAQ,CAAC,EAAD,CAA1C;AACA,QAAM,CAACyC,YAAD,EAAeC,eAAf,IAAkC1C,QAAQ,CAAC,EAAD,CAAhD;AACA,QAAM,CAAC2C,iBAAD,EAAoBC,oBAApB,IAA4C5C,QAAQ,CAAC,EAAD,CAA1D;AAEA,QAAM,CAAC6C,UAAD,EAAaC,aAAb,IAA8B9C,QAAQ,CAAC,IAAD,CAA5C;;AAEA,QAAM+C,eAAe,GAAIC,GAAD,IAAS;AAC/B,WAAOC,IAAI,CAACC,SAAL,CAAeF,GAAf,EAAoB,IAApB,EAA0B,CAA1B,CAAP;AACD,GAFD;;AAKA,QAAM;AAAEG,IAAAA,SAAS,EAAEC,oBAAb;AAAmCC,IAAAA,MAAM,EAAEC;AAA3C,MAA+DpD,WAAW,CAE9E,YAAY;AACV,WAAO,MAAMH,SAAS,CAACwD,IAAV,CAAgB,eAAhB,EAAgC;AAC3CC,MAAAA,SAAS,EAAE3B,aADgC;AAE3C4B,MAAAA,QAAQ,EAAE1B,YAFiC;AAG3C2B,MAAAA,WAAW,EAAEzB,eAH8B;AAI3C0B,MAAAA,GAAG,EAAExB,UAJsC;AAK3CyB,MAAAA,KAAK,EAACvB,SALqC;AAM3CwB,MAAAA,KAAK,EAACtB,SANqC;AAO3CuB,MAAAA,QAAQ,EAACrB;AAPkC,KAAhC,CAAb;AASD,GAZ6E,CAc9E;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AA3B8E,GAAhF;AA8BAxC,EAAAA,SAAS,CAAC,MAAM;AACd,QAAImD,oBAAJ,EAA0BN,aAAa,CAAC,YAAD,CAAb;AAC3B,GAFQ,EAEN,CAACM,oBAAD,CAFM,CAAT;AAIAW,EAAAA,OAAO,CAACC,GAAR,CAAY,CAACZ,oBAAD,CAAZ;;AAEN,WAASa,QAAT,GAAoB;AAClB,QAAI;AACFX,MAAAA,eAAe;AAChB,KAFD,CAEE,OAAOY,GAAP,EAAY;AACZ;AACAH,MAAAA,OAAO,CAACC,GAAR,CAAYE,GAAZ;AACD;AACF;;AAGH,sBACI;AAAK,IAAA,SAAS,EAAG,YAAjB;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA,YADJ,eAEG;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA,cADF,eACQ;AAAA;AAAA;AAAA;AAAA,cADR,eACc;AAAA;AAAA;AAAA;AAAA,cADd,eAEE,QAAC,GAAD;AAAK,QAAA,SAAS,EAAE,aAAhB;AAA8B,QAAA,CAAC,EAAE,CAAjC;AAAoC,QAAA,EAAE,EAAE;AAACC,UAAAA,KAAK,EAAE,GAAR;AAAaC,UAAAA,QAAQ,EAAE;AAAvB,SAAxC;AAAA,gCACG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADH,eAEG;AAAA;AAAA;AAAA;AAAA,gBAFH,eAGG;AAAA;AAAA;AAAA;AAAA,gBAHH,eAIG;AAAA;AAAA;AAAA;AAAA,gBAJH,eAKE,QAAC,SAAD,CACC;AADD;AAEC,UAAA,KAAK,EAAEvC,aAFR;AAGC,UAAA,QAAQ,EAAGwC,CAAD,IAAOvC,gBAAgB,CAACuC,CAAC,CAAC9C,MAAF,CAASJ,KAAV,CAHlC;AAIC,UAAA,IAAI,EAAC,OAJN;AAKC,UAAA,SAAS,MALV;AAMC,UAAA,KAAK,EAAC,MANP;AAOC,UAAA,EAAE,EAAC;AAPJ;AAAA;AAAA;AAAA;AAAA,gBALF,eAcE;AAAA;AAAA;AAAA;AAAA,gBAdF,eAeE;AAAA;AAAA;AAAA;AAAA,gBAfF,eAgBE,QAAC,SAAD,CACC;AADD;AAEC,UAAA,KAAK,EAAEY,YAFR;AAGC,UAAA,QAAQ,EAAGsC,CAAD,IAAOrC,eAAe,CAACqC,CAAC,CAAC9C,MAAF,CAASJ,KAAV,CAHjC;AAIC,UAAA,IAAI,EAAC,OAJN;AAKC,UAAA,SAAS,MALV;AAMC,UAAA,KAAK,EAAC,WANP;AAOC,UAAA,EAAE,EAAC;AAPJ;AAAA;AAAA;AAAA;AAAA,gBAhBF,eAyBE;AAAA;AAAA;AAAA;AAAA,gBAzBF,eA0BE;AAAA;AAAA;AAAA;AAAA,gBA1BF,eA2BE,QAAC,SAAD,CACC;AADD;AAEC,UAAA,KAAK,EAAEc,eAFR;AAGC,UAAA,QAAQ,EAAGoC,CAAD,IAAOnC,kBAAkB,CAACmC,CAAC,CAAC9C,MAAF,CAASJ,KAAV,CAHpC;AAIC,UAAA,IAAI,EAAC,OAJN;AAKC,UAAA,SAAS,MALV;AAMC,UAAA,KAAK,EAAC,iBANP;AAOC,UAAA,EAAE,EAAC;AAPJ;AAAA;AAAA;AAAA;AAAA,gBA3BF,eAoCE;AAAA;AAAA;AAAA;AAAA,gBApCF,eAqCE;AAAA;AAAA;AAAA;AAAA,gBArCF,eAsCE,QAAC,SAAD,CACC;AADD;AAEC,UAAA,KAAK,EAAEgB,UAFR;AAGC,UAAA,QAAQ,EAAGkC,CAAD,IAAOjC,aAAa,CAACiC,CAAC,CAAC9C,MAAF,CAASJ,KAAV,CAH/B;AAIC,UAAA,IAAI,EAAC,OAJN;AAKC,UAAA,SAAS,MALV;AAMC,UAAA,KAAK,EAAC,OANP;AAOC,UAAA,EAAE,EAAC;AAPJ;AAAA;AAAA;AAAA;AAAA,gBAtCF,eA+CE;AAAA;AAAA;AAAA;AAAA,gBA/CF,eAgDE;AAAA;AAAA;AAAA;AAAA,gBAhDF,eAiDE,QAAC,SAAD,CACC;AADD;AAEC,UAAA,KAAK,EAAEkB,SAFR;AAGC,UAAA,QAAQ,EAAGgC,CAAD,IAAO/B,YAAY,CAAC+B,CAAC,CAAC9C,MAAF,CAASJ,KAAV,CAH9B;AAIC,UAAA,IAAI,EAAC,OAJN;AAKC,UAAA,SAAS,MALV;AAMC,UAAA,KAAK,EAAC,oBANP;AAOC,UAAA,EAAE,EAAC;AAPJ;AAAA;AAAA;AAAA;AAAA,gBAjDF,eA0DE;AAAA;AAAA;AAAA;AAAA,gBA1DF,eA2DE;AAAA;AAAA;AAAA;AAAA,gBA3DF,eA4DE,QAAC,SAAD,CACC;AADD;AAEC,UAAA,KAAK,EAAEoB,SAFR;AAGC,UAAA,QAAQ,EAAGjB,KAAD,IAAWkB,YAAY,CAAClB,KAAK,CAACC,MAAN,CAAaJ,KAAd,CAHlC;AAIC,UAAA,IAAI,EAAC,OAJN;AAKC,UAAA,SAAS,MALV;AAMC,UAAA,KAAK,EAAC,UANP;AAOC,UAAA,EAAE,EAAC;AAPJ;AAAA;AAAA;AAAA;AAAA,gBA5DF,eAqEE;AAAA;AAAA;AAAA;AAAA,gBArEF,eAsEE;AAAA;AAAA;AAAA;AAAA,gBAtEF,eAuEE,QAAC,SAAD,CACC;AADD;AAEC,UAAA,KAAK,EAAEsB,YAFR;AAGC,UAAA,IAAI,EAAC,UAHN;AAIC,UAAA,IAAI,EAAC,OAJN;AAKC,UAAA,QAAQ,EAAG4B,CAAD,IAAO3B,eAAe,CAAC2B,CAAC,CAAC9C,MAAF,CAASJ,KAAV,CALjC;AAMC,UAAA,SAAS,MANV;AAOC,UAAA,KAAK,EAAC,OAPP;AAQC,UAAA,EAAE,EAAC;AARJ;AAAA;AAAA;AAAA;AAAA,gBAvEF,eAiFE;AAAA;AAAA;AAAA;AAAA,gBAjFF,eAkFE;AAAA;AAAA;AAAA;AAAA,gBAlFF,eAmFE,QAAC,SAAD,CACC;AADD;AAEC,UAAA,KAAK,EAAEwB,iBAFR;AAGC,UAAA,QAAQ,EAAG0B,CAAD,IAAOzB,oBAAoB,CAACyB,CAAC,CAAC9C,MAAF,CAASJ,KAAV,CAHtC;AAIC,UAAA,IAAI,EAAC,OAJN;AAKC,UAAA,SAAS,MALV;AAMC,UAAA,IAAI,EAAC,UANN;AAOC,UAAA,KAAK,EAAC,iBAPP;AAQC,UAAA,EAAE,EAAC;AARJ;AAAA;AAAA;AAAA;AAAA,gBAnFF;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAiGE;AAAA;AAAA;AAAA;AAAA,cAjGF,eAiGQ;AAAA;AAAA;AAAA;AAAA,cAjGR,eAkGG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAlGH,eAmGE;AAAA;AAAA;AAAA;AAAA,cAnGF,eAoGE,QAAC,GAAD;AAAK,QAAA,SAAS,EAAE,aAAhB;AAAA,gCACC;AAAA;AAAA;AAAA;AAAA,gBADD,eAQG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARH,eASC,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE;AAAEmD,YAAAA,QAAQ,EAAE;AAAZ,WAAT;AAAA,iCACI,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,OAAO,EAAE,CAAzB;AAA4B,YAAA,OAAO,EAAE,CAArC;AAAA,oCACA,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,CAAf;AAAA,qCACE,QAAC,IAAD;AAAA,wCACE;AAAK,kBAAA,GAAG,EAAE;AAAV;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,KAAD;AACE,kBAAA,KAAK,EAAC,IADR;AAEE,kBAAA,OAAO,EAAE7C,KAAK,KAAK,IAFrB;AAGE,kBAAA,QAAQ,EAAGH,KAAD,IAAWI,QAAQ,CAACJ,KAAK,CAACC,MAAN,CAAaJ,KAAd,CAH/B;AAGqD,kBAAA,IAAI,EAAC;AAH1D;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADA,eAWA,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,CAAf;AAAA,qCACE,QAAC,IAAD;AAAA,wCACE;AAAK,kBAAA,GAAG,EAAE;AAAV;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,KAAD;AACE,kBAAA,KAAK,EAAC,SADR;AAEE,kBAAA,OAAO,EAAEM,KAAK,KAAK,SAFrB;AAGE,kBAAA,QAAQ,EAAGH,KAAD,IAAWI,QAAQ,CAACJ,KAAK,CAACC,MAAN,CAAaJ,KAAd,CAH/B;AAGqD,kBAAA,IAAI,EAAC;AAH1D;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBATD,EAiCIM,KAAK,KAAK,IAAV,iBACC,QAAC,GAAD;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,kCACE;AAAA;AAAA;AAAA;AAAA,kBADF,eAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFH,eAGG;AAAA;AAAA;AAAA;AAAA,kBAHH,eAII,QAAC,GAAD;AACE,YAAA,SAAS,EAAC,MADZ;AAEE,YAAA,EAAE,EAAE;AACF,sCAAwB;AAAE8C,gBAAAA,CAAC,EAAE,CAAL;AAAQJ,gBAAAA,KAAK,EAAE;AAAf;AADtB,aAFN;AAKE,YAAA,UAAU,MALZ;AAME,YAAA,YAAY,EAAC,KANf;AAAA,mCAQE;AAAA,sCACE,QAAC,SAAD;AACE,gBAAA,EAAE,EAAC,6BADL;AAEE,gBAAA,KAAK,EAAC,WAFR;AAGE,gBAAA,SAAS,MAHX;AAIE,gBAAA,OAAO,EAAE,CAJX;AAKE,gBAAA,KAAK,EAAEhD,KALT;AAME,gBAAA,QAAQ,EAAEE;AANZ;AAAA;AAAA;AAAA;AAAA,sBADF,eASE,QAAC,SAAD;AACE,gBAAA,EAAE,EAAC,mBADL;AAEE,gBAAA,KAAK,EAAC,uBAFR;AAGE,gBAAA,WAAW,EAAC,aAHd;AAIE,gBAAA,SAAS;AAJX;AAAA;AAAA;AAAA;AAAA,sBATF,eAeE,QAAC,SAAD;AACE,gBAAA,EAAE,EAAC,2BADL;AAEE,gBAAA,KAAK,EAAC,WAFR;AAGE,gBAAA,SAAS,MAHX;AAIE,gBAAA,IAAI,EAAE,CAJR;AAKE,gBAAA,YAAY,EAAC;AALf;AAAA;AAAA;AAAA;AAAA,sBAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,kBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAlCL;AAAA;AAAA;AAAA;AAAA;AAAA,cApGF,eA6KO,QAAC,MAAD,CACE;AADF;AAEE,QAAA,OAAO,EAAC,WAFV;AAGE,QAAA,EAAE,EAAG,YAHP;AAIE,QAAA,OAAO,EAAE4C,QAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cA7KP,eAqLO;AAAA;AAAA;AAAA;AAAA,cArLP,eAsLO;AAAA;AAAA;AAAA;AAAA,cAtLP,eAuLO;AAAA;AAAA;AAAA;AAAA,cAvLP,eAwLO;AAAA;AAAA;AAAA;AAAA,cAxLP;AAAA;AAAA;AAAA;AAAA;AAAA,YAFH;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA+LH;;GAvQQzC,Y;UA0BwEtB,W;;;KA1BxEsB,Y;AAyQT,eAAeA,YAAf","sourcesContent":["import React from 'react';\nimport '../../App.css';\n//import { makeStyles } from '@material-ui/styles';\nimport { TextField, Box, Button, Divider } from '@material-ui/core';\n//import { useTheme } from '@material-ui/core/styles';\nimport apiClient from './http-common';\n//import { useQuery } from \"react-query\";\nimport { useState, useEffect } from 'react';\nimport { useMutation } from 'react-query';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\nimport Radio from '@mui/material/Radio';\nimport { styled } from '@mui/material/styles';\nimport HelpOutlineSharpIcon from '@mui/icons-material/HelpOutlineSharp';\n\nconst Item = styled(Paper)(({ theme }) => ({\n  ...theme.typography.body2,\n  padding: theme.spacing(1),\n  textAlign: 'center',\n  color: theme.palette.text.secondary,\n}));\n\nconst [value, setValue] = React.useState('Controlled');\n\n  const handleChange = (event) => {\n    setValue(event.target.value);\n  };\n\n// const useStyles = makeStyles((theme) =>  ({\n//     grow: {\n//       flexGrow:1,\n//     },\n   \n//     buttonContinue: {\n//         flexGrow: 2,\n//         paddingTop: theme.spacing(2),\n//         color:\"#fff\",\n//         background: \"#26319a\",\n//     },\n// }));\n\nfunction Registration() {\n    \n        //const classes = useStyles();\n        //const theme = useTheme();\n            const [chose, setChose] = useState(null);\n            \n            const alertHelp = () => {\n               return alert(\"Você deve escolher a versão que deseja participar do evento.\" + \"\\n\" + \"Se VR, fique atento ao seu regulamento de uso!\");\n            }\n\n            const [postFirstName, setPostFirstName] = useState(\"\");\n            const [postLastName, setPostLastName] = useState(\"\");\n            const [postNameCompany, setPostNameCompany] = useState(\"\");\n            const [postOffice, setPostOffice] = useState(\"\");\n            const [postEmail, setPostEmail] = useState(\"\");\n            const [postPhone, setPostPhone] = useState(\"\");\n            const [postPassword, setPostPassword] = useState(\"\");\n            const [postCheckPassword, setPostCheckPassword] = useState(\"\");\n\n            const [postResult, setPostResult] = useState(null);\n\n            const fortmatResponse = (res) => {\n              return JSON.stringify(res, null, 2);\n            };\n            \n              \n            const { isLoading: isPostingParticipant, mutate: postParticipant } = useMutation(\n\n              async () => {\n                return await apiClient.post(`/participants`, {\n                  firstName: postFirstName,\n                  lastName: postLastName,\n                  companyName: postNameCompany,\n                  job: postOffice,\n                  email:postEmail,\n                  phone:postPhone,\n                  password:postPassword,\n                });\n              },\n             \n              // {\n              //   onSuccess: (res) => {\n              //     const result = {\n              //       status: res.status + \"-\" + res.statusText,\n              //       headers: res.headers,\n              //       data: res.data,\n              //   };\n          \n              //     setPostResult(fortmatResponse(result));\n              //   },\n              //   onError: (err) => {\n              //     setPostResult(fortmatResponse(err.response?.data || err));\n              //   },\n              // }\n            );\n           \n            useEffect(() => {\n              if (isPostingParticipant) setPostResult(\"posting...\");\n            }, [isPostingParticipant]);\n\n            console.log([isPostingParticipant]);\n   \n      function postData() {\n        try {\n          postParticipant();\n        } catch (err) {\n          //setPostResult(fortmatResponse(err));\n          console.log(err);\n        }\n      }\n      \n    \n    return (\n        <div className = \"formulario\">\n            <br />\n           <div className=\"boxRegisterWhite\"> \n             <br /><br /><br />\n             <Box className =\"boxRegister\" p={8} sx={{width: 600, maxWidth: '100%',}}>\n                <h2>Preencha todos os campos </h2>\n                <br />\n                <br />\n                <br />\n               <TextField \n                //className = {classes.textBox}\n                value={postFirstName}\n                onChange={(e) => setPostFirstName(e.target.value)}\n                size=\"small\"\n                fullWidth \n                label=\"Nome\" \n                id=\"firstName\" \n               />\n               <br />\n               <br />\n               <TextField \n                //className = {classes.textBox}\n                value={postLastName}\n                onChange={(e) => setPostLastName(e.target.value)}\n                size=\"small\"\n                fullWidth \n                label=\"Sobrenome\" \n                id=\"fullWidth\" \n               />\n               <br />\n               <br />\n               <TextField \n                //className = {classes.textBox}\n                value={postNameCompany}\n                onChange={(e) => setPostNameCompany(e.target.value)}\n                size=\"small\"\n                fullWidth \n                label=\"Nome da empresa\"\n                id=\"fullWidth\" \n               />\n               <br />\n               <br />\n               <TextField \n                //className = {classes.textBox} \n                value={postOffice}\n                onChange={(e) => setPostOffice(e.target.value)}\n                size=\"small\"\n                fullWidth \n                label=\"Cargo\" \n                id=\"fullWidth\" \n               />\n               <br />\n               <br />\n               <TextField \n                //className = {classes.textBox} \n                value={postEmail}\n                onChange={(e) => setPostEmail(e.target.value)}\n                size=\"small\"\n                fullWidth\n                label=\"E-mail corporativo\" \n                id=\"fullWidth\"\n               />\n               <br />\n               <br />\n               <TextField \n                //className = {classes.textBox} \n                value={postPhone}\n                onChange={(event) => setPostPhone(event.target.value) }\n                size=\"small\"\n                fullWidth\n                label=\"Telefone\" \n                id=\"fullWidth\" \n               />\n               <br />\n               <br />\n               <TextField \n                //className = {classes.textBox}\n                value={postPassword}\n                type=\"password\"\n                size=\"small\"\n                onChange={(e) => setPostPassword(e.target.value)}\n                fullWidth \n                label=\"Senha\" \n                id=\"fullWidth\" \n               /> \n               <br />\n               <br />\n               <TextField \n                //className = {classes.textBox} \n                value={postCheckPassword}\n                onChange={(e) => setPostCheckPassword(e.target.value)}\n                size=\"small\"\n                fullWidth\n                type=\"password\"\n                label=\"Confirmar senha\" \n                id=\"fullWidth\" \n               />\n\n             </Box>\n             <br /><br />\n              <Divider />\n             <br />\n             <Box className =\"boxRegister\">\n              <br />\n                {/* <div \n                className=\"helpVersion\"\n                onClick={alertHelp}\n                >\n                <HelpOutlineSharpIcon />\n                </div> */}\n                <h2>Escolha versão</h2>\n              <Box sx={{ flexGrow: 1 }}>\n                  <Grid container spacing={2} columns={8}>\n                  <Grid item xs={4}>\n                    <Item>\n                      <img src= \"/FOTOS/vr1.png\"></img>\n                      <Radio \n                        value=\"VR\" \n                        checked={chose === \"VR\"} \n                        onChange={(event) => setChose(event.target.value)} name=\"option\" \n                      /> VR\n                    </Item>\n                  </Grid>\n                  <Grid item xs={4}>\n                    <Item>\n                      <img src= \"/FOTOS/pc1.png\"></img>\n                      <Radio \n                        value=\"Desktop\" \n                        checked={chose === \"Desktop\"} \n                        onChange={(event) => setChose(event.target.value)} name=\"option\" \n                      /> Desktop\n                    </Item>\n                  </Grid>\n                </Grid>\n              </Box>\n                {chose === \"VR\" &&  \n                  <Box className=\"address\">\n                    <br />\n                     <h2>Preencha seu endereço</h2>\n                     <br />\n                      <Box\n                        component=\"form\"\n                        sx={{\n                          '& .MuiTextField-root': { m: 1, width: '25ch' },\n                        }}\n                        noValidate\n                        autoComplete=\"off\"\n                      >\n                        <div>\n                          <TextField\n                            id=\"outlined-multiline-flexible\"\n                            label=\"Multiline\"\n                            multiline\n                            maxRows={4}\n                            value={value}\n                            onChange={handleChange}\n                          />\n                          <TextField\n                            id=\"outlined-textarea\"\n                            label=\"Multiline Placeholder\"\n                            placeholder=\"Placeholder\"\n                            multiline\n                          />\n                          <TextField\n                            id=\"outlined-multiline-static\"\n                            label=\"Multiline\"\n                            multiline\n                            rows={4}\n                            defaultValue=\"Default Value\"\n                          />\n                        </div>\n                      </Box>    \n                  </Box> \n                }\n                </Box>\n                  <Button \n                    //className= {classes.buttonContinue} \n                    variant=\"contained\" \n                    id = \"buttonForm\" \n                    onClick={postData}\n                  >\n                    Cadastrar\n                  </Button>\n                  <br />\n                  <br />\n                  <br />\n                  <br />\n            </div> \n        </div>\n    );\n}\n\nexport default Registration;"]},"metadata":{},"sourceType":"module"}