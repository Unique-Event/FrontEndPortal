{"ast":null,"code":"var _jsxFileName = \"/home/alberttgomes/UniqueEvents/FrontEndPortal/src/components/Pages/Registration.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport '../../App.css'; //import { makeStyles } from '@material-ui/styles';\n\nimport { TextField, Box, Button, Divider } from '@material-ui/core'; //import { useTheme } from '@material-ui/core/styles';\n\nimport apiClient from './http-common';\nimport apiClientVersion from './http-commonVersion';\nimport { useState } from 'react';\nimport { useMutation } from 'react-query'; // const useStyles = makeStyles((theme) =>  ({\n//     grow: {\n//       flexGrow:1,\n//     },\n//     buttonContinue: {\n//         flexGrow: 2,\n//         paddingTop: theme.spacing(2),\n//         color:\"#fff\",\n//         background: \"#26319a\",\n//     },\n// }));\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Registration() {\n  _s();\n\n  //const classes = useStyles();\n  //const theme = useTheme();\n  const [postFirstName, setPostFirstName] = useState(\"\");\n  const [postLastName, setPostLastName] = useState(\"\");\n  const [postNameCompany, setPostNameCompany] = useState(\"\");\n  const [postOffice, setPostOffice] = useState(\"\");\n  const [postEmail, setPostEmail] = useState(\"\");\n  const [postPhone, setPostPhone] = useState(\"\");\n  const [postPassword, setPostPassword] = useState(\"\");\n  const [postCheckPassword, setPostCheckPassword] = useState(\"\");\n  const {\n    isLoading: isPostingParticipant,\n    mutate: postParticipant\n  } = useMutation(async () => {\n    return await apiClient.post(`/participant`, {\n      firstName: postFirstName,\n      lastName: postLastName,\n      companyName: postNameCompany,\n      job: postOffice,\n      email: postEmail,\n      phone: postPhone,\n      password: postPassword\n    });\n  }); // const { isLoading, isSuccess, isError, data, error, mutate } =\n  // useMutation(postParticipant());\n\n  const [postVR, setPostVR] = useState(\"\");\n  const [postDesktop, setPostDesktop] = useState(\"\");\n  const {\n    isLoading: isPostingVersion,\n    mutate: postVersion\n  } = useMutation(async () => {\n    return await apiClientVersion.post(`/version`, {\n      Desktop: postDesktop,\n      VR: postVR\n    });\n  });\n\n  function postData() {\n    try {\n      postParticipant();\n      postVersion();\n    } catch (err) {\n      //setPostResult(fortmatResponse(err));\n      alert(err);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"formulario\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"boxRegisterWhite\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"boxRegister\",\n        p: 8,\n        sx: {\n          width: 500,\n          maxWidth: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(TextField //className = {classes.textBox}\n        , {\n          value: postFirstName,\n          onChange: e => setPostFirstName(e.target.value),\n          fullWidth: true,\n          label: \"Nome\",\n          id: \"firstName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(TextField //className = {classes.textBox}\n        , {\n          value: postLastName,\n          onChange: e => setPostLastName(e.target.value),\n          fullWidth: true,\n          label: \"Sobrenome\",\n          id: \"fullWidth\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(TextField //className = {classes.textBox}\n        , {\n          value: postNameCompany,\n          onChange: e => setPostNameCompany(e.target.value),\n          fullWidth: true,\n          label: \"Nome da empresa\",\n          id: \"fullWidth\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(TextField //className = {classes.textBox} \n        , {\n          value: postOffice,\n          onChange: e => setPostOffice(e.target.value),\n          fullWidth: true,\n          label: \"Cargo\",\n          id: \"fullWidth\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(TextField //className = {classes.textBox} \n        , {\n          value: postEmail,\n          onChange: e => setPostEmail(e.target.value),\n          fullWidth: true,\n          label: \"E-mail corporativo\",\n          id: \"fullWidth\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(TextField //className = {classes.textBox} \n        , {\n          value: postPhone,\n          onChange: event => setPostPhone(event.target.value),\n          fullWidth: true,\n          label: \"Telefone\",\n          id: \"fullWidth\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(TextField //className = {classes.textBox}\n        , {\n          value: postPassword,\n          onChange: e => setPostPassword(e.target.value),\n          fullWidth: true,\n          label: \"Senha\",\n          id: \"fullWidth\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(TextField //className = {classes.textBox} \n        , {\n          value: postCheckPassword,\n          onChange: e => setPostCheckPassword(e.target.value),\n          fullWidth: true,\n          label: \"Confirmar senha\",\n          id: \"fullWidth\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"boxRegister\",\n        children: /*#__PURE__*/_jsxDEV(Button //className= {classes.buttonContinue} \n        , {\n          variant: \"contained\",\n          id: \"buttonForm\",\n          onClick: postData,\n          children: \"Cadastrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Registration, \"coMJOOQOeyQe9LPuHCUs67z3mnQ=\", false, function () {\n  return [useMutation, useMutation];\n});\n\n_c = Registration;\nexport default Registration;\n\nvar _c;\n\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"sources":["/home/alberttgomes/UniqueEvents/FrontEndPortal/src/components/Pages/Registration.jsx"],"names":["React","TextField","Box","Button","Divider","apiClient","apiClientVersion","useState","useMutation","Registration","postFirstName","setPostFirstName","postLastName","setPostLastName","postNameCompany","setPostNameCompany","postOffice","setPostOffice","postEmail","setPostEmail","postPhone","setPostPhone","postPassword","setPostPassword","postCheckPassword","setPostCheckPassword","isLoading","isPostingParticipant","mutate","postParticipant","post","firstName","lastName","companyName","job","email","phone","password","postVR","setPostVR","postDesktop","setPostDesktop","isPostingVersion","postVersion","Desktop","VR","postData","err","alert","width","maxWidth","e","target","value","event"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../../App.css';\n//import { makeStyles } from '@material-ui/styles';\nimport { TextField, Box, Button, Divider } from '@material-ui/core';\n//import { useTheme } from '@material-ui/core/styles';\nimport apiClient from './http-common';\nimport apiClientVersion from './http-commonVersion';\nimport { useState } from 'react';\nimport { useMutation } from 'react-query';\n\n\n\n// const useStyles = makeStyles((theme) =>  ({\n//     grow: {\n//       flexGrow:1,\n//     },\n   \n//     buttonContinue: {\n//         flexGrow: 2,\n//         paddingTop: theme.spacing(2),\n//         color:\"#fff\",\n//         background: \"#26319a\",\n//     },\n// }));\n\nfunction Registration() {\n    \n    //const classes = useStyles();\n    //const theme = useTheme();\n\n    const [postFirstName, setPostFirstName] = useState(\"\");\n    const [postLastName, setPostLastName] = useState(\"\");\n    const [postNameCompany, setPostNameCompany] = useState(\"\");\n    const [postOffice, setPostOffice] = useState(\"\");\n    const [postEmail, setPostEmail] = useState(\"\");\n    const [postPhone, setPostPhone] = useState(\"\");\n    const [postPassword, setPostPassword] = useState(\"\");\n    const [postCheckPassword, setPostCheckPassword] = useState(\"\");\n\n       \n      const { isLoading: isPostingParticipant, mutate: postParticipant } = useMutation(\n        async () => {\n          return await apiClient.post(`/participant`, {\n            firstName: postFirstName,\n            lastName: postLastName,\n            companyName: postNameCompany,\n            job: postOffice,\n            email:postEmail,\n            phone:postPhone,\n            password:postPassword,\n          });\n        },\n    \n      );\n      \n      // const { isLoading, isSuccess, isError, data, error, mutate } =\n      // useMutation(postParticipant());\n\n      const [postVR, setPostVR] = useState(\"\");\n      const [postDesktop, setPostDesktop] = useState(\"\");\n\n      const { isLoading: isPostingVersion, mutate: postVersion } = useMutation(\n        async () => {\n          return await apiClientVersion.post(`/version`, {\n            Desktop:postDesktop,\n            VR:postVR,\n          });\n        },\n    \n      );\n      \n   \n      function postData() {\n        try {\n          postParticipant();\n          postVersion();\n        } catch (err) {\n          //setPostResult(fortmatResponse(err));\n          alert(err);\n        }\n      }\n      \n    \n    return (\n        <div className = \"formulario\">\n            <br />\n           <div className=\"boxRegisterWhite\"> \n             <br /><br /><br />\n             <Box className =\"boxRegister\" p={8} sx={{width: 500, maxWidth: '100%',}}>\n                \n               <TextField \n                //className = {classes.textBox}\n                value={postFirstName}\n                onChange={(e) => setPostFirstName(e.target.value)}\n                fullWidth \n                label=\"Nome\" \n                id=\"firstName\" \n               />\n               <TextField \n                //className = {classes.textBox}\n                value={postLastName}\n                onChange={(e) => setPostLastName(e.target.value)}\n                fullWidth \n                label=\"Sobrenome\" \n                id=\"fullWidth\" \n               />\n               <TextField \n                //className = {classes.textBox}\n                value={postNameCompany}\n                onChange={(e) => setPostNameCompany(e.target.value)}\n                fullWidth \n                label=\"Nome da empresa\"\n                id=\"fullWidth\" \n               />\n               <TextField \n                //className = {classes.textBox} \n                value={postOffice}\n                onChange={(e) => setPostOffice(e.target.value)}\n                fullWidth \n                label=\"Cargo\" \n                id=\"fullWidth\" \n               /><br />\n               <TextField \n                //className = {classes.textBox} \n                value={postEmail}\n                onChange={(e) => setPostEmail(e.target.value)}\n                fullWidth\n                label=\"E-mail corporativo\" \n                id=\"fullWidth\"\n               />\n               <TextField \n                //className = {classes.textBox} \n                value={postPhone}\n                onChange={(event) => setPostPhone(event.target.value) }\n                fullWidth\n                label=\"Telefone\" \n                id=\"fullWidth\" \n               />\n               <TextField \n                //className = {classes.textBox}\n                value={postPassword}\n                onChange={(e) => setPostPassword(e.target.value)}\n                fullWidth \n                label=\"Senha\" \n                id=\"fullWidth\" \n               /> \n               <TextField \n                //className = {classes.textBox} \n                value={postCheckPassword}\n                onChange={(e) => setPostCheckPassword(e.target.value)}\n                fullWidth\n                label=\"Confirmar senha\" \n                id=\"fullWidth\" \n               />\n\n             </Box>\n             \n              <Divider />\n             \n             <Box className =\"boxRegister\">\n              \n                  <Button \n                    //className= {classes.buttonContinue} \n                    variant=\"contained\" \n                    id = \"buttonForm\" \n                    onClick={postData}\n                  >\n                    Cadastrar\n                  </Button>\n             </Box>\n\n            </div> \n        </div>\n    );\n}\n\nexport default Registration;"]},"metadata":{},"sourceType":"module"}