{"ast":null,"code":"var _jsxFileName = \"/home/alberttgomes/UniqueEvents/FrontEndPortal/src/components/Pages/Registration.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport '../../App.css'; //import { makeStyles } from '@material-ui/styles';\n\nimport { TextField, Box, Button, Divider } from '@material-ui/core'; //import { useTheme } from '@material-ui/core/styles';\n\nimport apiClient from './http-common'; //import { useQuery } from \"react-query\";\n\nimport { useState, useEffect } from 'react';\nimport { useMutation } from 'react-query'; // const useStyles = makeStyles((theme) =>  ({\n//     grow: {\n//       flexGrow:1,\n//     },\n//     buttonContinue: {\n//         flexGrow: 2,\n//         paddingTop: theme.spacing(2),\n//         color:\"#fff\",\n//         background: \"#26319a\",\n//     },\n// }));\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Registration() {\n  _s();\n\n  //const classes = useStyles();\n  //const theme = useTheme();\n  const {\n    isLoading,\n    isSuccess,\n    isError,\n    data,\n    error,\n    mutate\n  } = useMutation(postParticipant(info), {\n    onSuccess,\n    onError\n  });\n  const [postFirstName, setPostFirstName] = useState(\"\");\n  const [postLastName, setPostLastName] = useState(\"\");\n  const [postNameCompany, setPostNameCompany] = useState(\"\");\n  const [postOffice, setPostOffice] = useState(\"\");\n  const [postEmail, setPostEmail] = useState(\"\");\n  const [postPhone, setPostPhone] = useState(\"\");\n  const [postPassword, setPostPassword] = useState(\"\");\n  const [postCheckPassword, setPostCheckPassword] = useState(\"\");\n  const [postResult, setPostResult] = useState(null);\n\n  const fortmatResponse = res => {\n    return JSON.stringify(res, null, 2);\n  };\n\n  const {\n    isLoading: isPostingParticipant,\n    mutate: postParticipant\n  } = useMutation(async () => {\n    return await apiClient.post(`/participants`, {\n      firstName: postFirstName,\n      lastName: postLastName,\n      companyName: postNameCompany,\n      job: postOffice,\n      email: postEmail,\n      phone: postPhone,\n      password: postPassword\n    });\n  }, {\n    onSuccess: res => {\n      const result = {\n        status: res.status + \"-\" + res.statusText,\n        headers: res.headers,\n        data: res.data\n      };\n      setPostResult(fortmatResponse(result));\n    },\n    onError: err => {\n      var _err$response;\n\n      setPostResult(fortmatResponse(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err));\n    }\n  });\n  useEffect(() => {\n    if (isPostingParticipant) setPostResult(\"posting...\");\n  }, [isPostingParticipant]); // const { isLoading, isSuccess, isError, data, error, mutate } =\n  // useMutation(postParticipant());\n  // const [postVR, setPostVR] = useState(\"\");\n  // const [postDesktop, setPostDesktop] = useState(\"\");\n  // const { isLoading: isPostingVersion, mutate: postVersion } = useMutation(\n  //   async () => {\n  //     return await apiClientVersion.post(`/version`, {\n  //       Desktop:postDesktop,\n  //       VR:postVR,\n  //     });\n  //   },\n  // );\n\n  function postData() {\n    try {\n      postParticipant();\n    } catch (err) {\n      //setPostResult(fortmatResponse(err));\n      alert(err);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"formulario\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"boxRegisterWhite\",\n      children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 20\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 26\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"boxRegister\",\n        p: 8,\n        sx: {\n          width: 600,\n          maxWidth: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Preencha todos os campos \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(TextField //className = {classes.textBox}\n        , {\n          value: postFirstName,\n          onChange: e => setPostFirstName(e.target.value),\n          fullWidth: true,\n          label: \"Nome\",\n          id: \"firstName\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(TextField //className = {classes.textBox}\n        , {\n          value: postLastName,\n          onChange: e => setPostLastName(e.target.value),\n          fullWidth: true,\n          label: \"Sobrenome\",\n          id: \"fullWidth\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(TextField //className = {classes.textBox}\n        , {\n          value: postNameCompany,\n          onChange: e => setPostNameCompany(e.target.value),\n          fullWidth: true,\n          label: \"Nome da empresa\",\n          id: \"fullWidth\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(TextField //className = {classes.textBox} \n        , {\n          value: postOffice,\n          onChange: e => setPostOffice(e.target.value),\n          fullWidth: true,\n          label: \"Cargo\",\n          id: \"fullWidth\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(TextField //className = {classes.textBox} \n        , {\n          value: postEmail,\n          onChange: e => setPostEmail(e.target.value),\n          fullWidth: true,\n          label: \"E-mail corporativo\",\n          id: \"fullWidth\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(TextField //className = {classes.textBox} \n        , {\n          value: postPhone,\n          onChange: event => setPostPhone(event.target.value),\n          fullWidth: true,\n          label: \"Telefone\",\n          id: \"fullWidth\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(TextField //className = {classes.textBox}\n        , {\n          value: postPassword,\n          onChange: e => setPostPassword(e.target.value),\n          fullWidth: true,\n          label: \"Senha\",\n          id: \"fullWidth\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(TextField //className = {classes.textBox} \n        , {\n          value: postCheckPassword,\n          onChange: e => setPostCheckPassword(e.target.value),\n          fullWidth: true,\n          label: \"Confirmar senha\",\n          id: \"fullWidth\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 16\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: \"boxRegister\",\n        children: /*#__PURE__*/_jsxDEV(Button //className= {classes.buttonContinue} \n        , {\n          variant: \"contained\",\n          id: \"buttonForm\",\n          onClick: postData,\n          children: \"Cadastrar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 19\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 14\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Registration, \"kQ+4fDH5krbudWwtqTSoAi2ahg4=\", false, function () {\n  return [useMutation, useMutation];\n});\n\n_c = Registration;\nexport default Registration;\n\nvar _c;\n\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"sources":["/home/alberttgomes/UniqueEvents/FrontEndPortal/src/components/Pages/Registration.jsx"],"names":["React","TextField","Box","Button","Divider","apiClient","useState","useEffect","useMutation","Registration","isLoading","isSuccess","isError","data","error","mutate","postParticipant","info","onSuccess","onError","postFirstName","setPostFirstName","postLastName","setPostLastName","postNameCompany","setPostNameCompany","postOffice","setPostOffice","postEmail","setPostEmail","postPhone","setPostPhone","postPassword","setPostPassword","postCheckPassword","setPostCheckPassword","postResult","setPostResult","fortmatResponse","res","JSON","stringify","isPostingParticipant","post","firstName","lastName","companyName","job","email","phone","password","result","status","statusText","headers","err","response","postData","alert","width","maxWidth","e","target","value","event"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../../App.css';\n//import { makeStyles } from '@material-ui/styles';\nimport { TextField, Box, Button, Divider } from '@material-ui/core';\n//import { useTheme } from '@material-ui/core/styles';\nimport apiClient from './http-common';\n//import { useQuery } from \"react-query\";\nimport { useState, useEffect } from 'react';\nimport { useMutation } from 'react-query';\n\n\n\n// const useStyles = makeStyles((theme) =>  ({\n//     grow: {\n//       flexGrow:1,\n//     },\n   \n//     buttonContinue: {\n//         flexGrow: 2,\n//         paddingTop: theme.spacing(2),\n//         color:\"#fff\",\n//         background: \"#26319a\",\n//     },\n// }));\n\nfunction Registration() {\n    \n        //const classes = useStyles();\n        //const theme = useTheme();\n\n            const { isLoading, isSuccess, isError, data, error, mutate } =\n            useMutation(postParticipant(info), { onSuccess, onError });\n\n            const [postFirstName, setPostFirstName] = useState(\"\");\n            const [postLastName, setPostLastName] = useState(\"\");\n            const [postNameCompany, setPostNameCompany] = useState(\"\");\n            const [postOffice, setPostOffice] = useState(\"\");\n            const [postEmail, setPostEmail] = useState(\"\");\n            const [postPhone, setPostPhone] = useState(\"\");\n            const [postPassword, setPostPassword] = useState(\"\");\n            const [postCheckPassword, setPostCheckPassword] = useState(\"\");\n\n            const [postResult, setPostResult] = useState(null);\n\n            const fortmatResponse = (res) => {\n              return JSON.stringify(res, null, 2);\n            };\n\n              \n            const { isLoading: isPostingParticipant, mutate: postParticipant } = useMutation(\n              async () => {\n                return await apiClient.post(`/participants`, {\n                  firstName: postFirstName,\n                  lastName: postLastName,\n                  companyName: postNameCompany,\n                  job: postOffice,\n                  email:postEmail,\n                  phone:postPhone,\n                  password:postPassword,\n                });\n              },\n              {\n                onSuccess: (res) => {\n                  const result = {\n                    status: res.status + \"-\" + res.statusText,\n                    headers: res.headers,\n                    data: res.data,\n                };\n          \n                  setPostResult(fortmatResponse(result));\n                },\n                onError: (err) => {\n                  setPostResult(fortmatResponse(err.response?.data || err));\n                },\n              }\n            );\n          \n            useEffect(() => {\n              if (isPostingParticipant) setPostResult(\"posting...\");\n            }, [isPostingParticipant]);\n            \n            \n                  \n      // const { isLoading, isSuccess, isError, data, error, mutate } =\n      // useMutation(postParticipant());\n\n      // const [postVR, setPostVR] = useState(\"\");\n      // const [postDesktop, setPostDesktop] = useState(\"\");\n\n      // const { isLoading: isPostingVersion, mutate: postVersion } = useMutation(\n      //   async () => {\n      //     return await apiClientVersion.post(`/version`, {\n      //       Desktop:postDesktop,\n      //       VR:postVR,\n      //     });\n      //   },\n    \n      // );\n      \n   \n      function postData() {\n        try {\n          postParticipant();\n        } catch (err) {\n          //setPostResult(fortmatResponse(err));\n          alert(err);\n        }\n      }\n      \n    \n    return (\n        <div className = \"formulario\">\n            <br />\n           <div className=\"boxRegisterWhite\"> \n             <br /><br /><br />\n             <Box className =\"boxRegister\" p={8} sx={{width: 600, maxWidth: '100%',}}>\n                <h2>Preencha todos os campos </h2>\n                <br />\n               <TextField \n                //className = {classes.textBox}\n                value={postFirstName}\n                onChange={(e) => setPostFirstName(e.target.value)}\n                fullWidth \n                label=\"Nome\" \n                id=\"firstName\" \n               />\n               <br />\n               <br />\n               <TextField \n                //className = {classes.textBox}\n                value={postLastName}\n                onChange={(e) => setPostLastName(e.target.value)}\n                fullWidth \n                label=\"Sobrenome\" \n                id=\"fullWidth\" \n               />\n               <br />\n               <br />\n               <TextField \n                //className = {classes.textBox}\n                value={postNameCompany}\n                onChange={(e) => setPostNameCompany(e.target.value)}\n                fullWidth \n                label=\"Nome da empresa\"\n                id=\"fullWidth\" \n               />\n               <br />\n               <br />\n               <TextField \n                //className = {classes.textBox} \n                value={postOffice}\n                onChange={(e) => setPostOffice(e.target.value)}\n                fullWidth \n                label=\"Cargo\" \n                id=\"fullWidth\" \n               />\n               <br />\n               <br />\n               <TextField \n                //className = {classes.textBox} \n                value={postEmail}\n                onChange={(e) => setPostEmail(e.target.value)}\n                fullWidth\n                label=\"E-mail corporativo\" \n                id=\"fullWidth\"\n               />\n               <br />\n               <br />\n               <TextField \n                //className = {classes.textBox} \n                value={postPhone}\n                onChange={(event) => setPostPhone(event.target.value) }\n                fullWidth\n                label=\"Telefone\" \n                id=\"fullWidth\" \n               />\n               <br />\n               <br />\n               <TextField \n                //className = {classes.textBox}\n                value={postPassword}\n                onChange={(e) => setPostPassword(e.target.value)}\n                fullWidth \n                label=\"Senha\" \n                id=\"fullWidth\" \n               /> \n               <br />\n               <br />\n               <TextField \n                //className = {classes.textBox} \n                value={postCheckPassword}\n                onChange={(e) => setPostCheckPassword(e.target.value)}\n                fullWidth\n                label=\"Confirmar senha\" \n                id=\"fullWidth\" \n               />\n\n             </Box>\n             \n              <Divider />\n             \n             <Box className =\"boxRegister\">\n              \n                  <Button \n                    //className= {classes.buttonContinue} \n                    variant=\"contained\" \n                    id = \"buttonForm\" \n                    onClick={postData}\n                  >\n                    Cadastrar\n                  </Button>\n             </Box>\n\n            </div> \n        </div>\n    );\n}\n\nexport default Registration;"]},"metadata":{},"sourceType":"module"}