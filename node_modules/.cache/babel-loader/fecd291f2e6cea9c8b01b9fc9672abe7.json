{"ast":null,"code":"var _jsxFileName = \"/home/alberttgomes/UniqueEvents/FrontEndPortal/src/components/Pages/Registration.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport '../../App.css';\nimport { makeStyles } from '@material-ui/styles';\nimport { TextField, Box, Button } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport apiClient from './http-common';\nimport { useState } from 'react';\nimport { useMutation } from 'react-query'; // const useStyles = makeStyles((theme) =>  ({\n//     grow: {\n//       flexGrow:1,\n//     },\n//     buttonContinue: {\n//         flexGrow: 2,\n//         paddingTop: theme.spacing(2),\n//         color:\"#fff\",\n//         background: \"#26319a\",\n//     },\n// }));\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Registration() {\n  _s();\n\n  const classes = useStyles();\n  const theme = useTheme();\n  const [postFirstName, setPostFirstName] = useState(\"\");\n  const [postLastName, setPostLastName] = useState(\"\");\n  const [postNameCompany, setPostNameCompany] = useState(\"\");\n  const [postOffice, setPostOffice] = useState(\"\");\n  const [postEmail, setPostEmail] = useState(\"\");\n  const [postPhone, setPostPhone] = useState(\"\");\n  const [postPassword, setPostPassword] = useState(\"\");\n  const [postCheckPassword, setPostCheckPassword] = useState(\"\");\n  const {\n    isLoading: isPostingParticipant,\n    mutate: postParticipant\n  } = useMutation(async () => {\n    return await apiClient.post(`/participant`, {\n      firstName: postFirstName,\n      lastName: postLastName,\n      companyName: postNameCompany,\n      job: postOffice,\n      email: postEmail,\n      phone: postPhone,\n      password: postPassword\n    });\n  }); // const { isLoading, isSuccess, isError, data, error, mutate } =\n  // useMutation(postParticipant());\n\n  function postData() {\n    try {\n      postParticipant();\n    } catch (err) {\n      //setPostResult(fortmatResponse(err));\n      alert(err);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"formulario\",\n    children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Preencha os dados\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: \"boxRegister\",\n      p: 8,\n      sx: {\n        width: 500,\n        maxWidth: '100%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.textBox,\n        value: postFirstName,\n        onChange: e => setPostFirstName(e.target.value),\n        fullWidth: true,\n        label: \"Nome\",\n        id: \"firstName\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.textBox,\n        value: postLastName,\n        onChange: e => setPostLastName(e.target.value),\n        fullWidth: true,\n        label: \"Sobrenome\",\n        id: \"fullWidth\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.textBox,\n        value: postNameCompany,\n        onChange: e => setPostNameCompany(e.target.value),\n        fullWidth: true,\n        label: \"Nome da empresa\",\n        id: \"fullWidth\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.textBox,\n        value: postOffice,\n        onChange: e => setPostOffice(e.target.value),\n        fullWidth: true,\n        label: \"Cargo\",\n        id: \"fullWidth\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.textBox,\n        value: postEmail,\n        onChange: e => setPostEmail(e.target.value),\n        fullWidth: true,\n        label: \"E-mail corporativo\",\n        id: \"fullWidth\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.textBox,\n        value: postPhone,\n        onChange: event => setPostPhone(event.target.value),\n        fullWidth: true,\n        label: \"Telefone\",\n        id: \"fullWidth\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.textBox,\n        value: postPassword,\n        onChange: e => setPostPassword(e.target.value),\n        fullWidth: true,\n        label: \"Senha\",\n        id: \"fullWidth\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        className: classes.textBox,\n        value: postCheckPassword,\n        onChange: e => setPostCheckPassword(e.target.value),\n        fullWidth: true,\n        label: \"Confirmar senha\",\n        id: \"fullWidth\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonContinue,\n        variant: \"contained\",\n        id: \"buttonForm\",\n        onClick: postData,\n        children: \"Continuar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 19\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Registration, \"BSYPiqgnoG70rFmn1M6QPdFqEgc=\", true, function () {\n  return [useTheme, useMutation];\n});\n\n_c = Registration;\nexport default Registration;\n\nvar _c;\n\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"sources":["/home/alberttgomes/UniqueEvents/FrontEndPortal/src/components/Pages/Registration.jsx"],"names":["React","makeStyles","TextField","Box","Button","useTheme","apiClient","useState","useMutation","Registration","classes","useStyles","theme","postFirstName","setPostFirstName","postLastName","setPostLastName","postNameCompany","setPostNameCompany","postOffice","setPostOffice","postEmail","setPostEmail","postPhone","setPostPhone","postPassword","setPostPassword","postCheckPassword","setPostCheckPassword","isLoading","isPostingParticipant","mutate","postParticipant","post","firstName","lastName","companyName","job","email","phone","password","postData","err","alert","width","maxWidth","textBox","e","target","value","event","buttonContinue"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../../App.css';\nimport { makeStyles } from '@material-ui/styles';\nimport { TextField, Box, Button } from '@material-ui/core';\nimport { useTheme } from '@material-ui/core/styles';\nimport apiClient from './http-common';\nimport { useState } from 'react';\nimport { useMutation } from 'react-query';\n\n// const useStyles = makeStyles((theme) =>  ({\n//     grow: {\n//       flexGrow:1,\n//     },\n   \n//     buttonContinue: {\n//         flexGrow: 2,\n//         paddingTop: theme.spacing(2),\n//         color:\"#fff\",\n//         background: \"#26319a\",\n//     },\n// }));\n\nfunction Registration() {\n    \n    const classes = useStyles();\n    const theme = useTheme();\n\n    const [postFirstName, setPostFirstName] = useState(\"\");\n    const [postLastName, setPostLastName] = useState(\"\");\n    const [postNameCompany, setPostNameCompany] = useState(\"\");\n    const [postOffice, setPostOffice] = useState(\"\");\n    const [postEmail, setPostEmail] = useState(\"\");\n    const [postPhone, setPostPhone] = useState(\"\");\n    const [postPassword, setPostPassword] = useState(\"\");\n    const [postCheckPassword, setPostCheckPassword] = useState(\"\");\n\n       \n      const { isLoading: isPostingParticipant, mutate: postParticipant } = useMutation(\n        async () => {\n          return await apiClient.post(`/participant`, {\n            firstName: postFirstName,\n            lastName: postLastName,\n            companyName: postNameCompany,\n            job: postOffice,\n            email:postEmail,\n            phone:postPhone,\n            password:postPassword,\n          });\n        },\n    \n      );\n      \n      // const { isLoading, isSuccess, isError, data, error, mutate } =\n      // useMutation(postParticipant());\n   \n      function postData() {\n        try {\n          postParticipant();\n        } catch (err) {\n          //setPostResult(fortmatResponse(err));\n          alert(err);\n        }\n      }\n      \n    \n    return (\n        <div className = \"formulario\">\n            <br />\n            <h2>Preencha os dados</h2>\n             <Box className =\"boxRegister\" p={8} sx={{width: 500, maxWidth: '100%',}}>\n             \n               <TextField \n                className = {classes.textBox}\n                value={postFirstName}\n                onChange={(e) => setPostFirstName(e.target.value)}\n                fullWidth \n                label=\"Nome\" \n                id=\"firstName\" \n               />\n               <TextField \n                className = {classes.textBox}\n                value={postLastName}\n                onChange={(e) => setPostLastName(e.target.value)}\n                fullWidth \n                label=\"Sobrenome\" \n                id=\"fullWidth\" \n               />\n               <TextField \n                className = {classes.textBox}\n                value={postNameCompany}\n                onChange={(e) => setPostNameCompany(e.target.value)}\n                fullWidth \n                label=\"Nome da empresa\"\n                id=\"fullWidth\" \n               />\n               <TextField \n                className = {classes.textBox} \n                value={postOffice}\n                onChange={(e) => setPostOffice(e.target.value)}\n                fullWidth \n                label=\"Cargo\" \n                id=\"fullWidth\" \n               />\n               <TextField \n                className = {classes.textBox} \n                value={postEmail}\n                onChange={(e) => setPostEmail(e.target.value)}\n                fullWidth\n                label=\"E-mail corporativo\" \n                id=\"fullWidth\"\n               />\n               <TextField \n                className = {classes.textBox} \n                value={postPhone}\n                onChange={(event) => setPostPhone(event.target.value) }\n                fullWidth\n                label=\"Telefone\" \n                id=\"fullWidth\" \n               />\n               <TextField \n                className = {classes.textBox}\n                value={postPassword}\n                onChange={(e) => setPostPassword(e.target.value)}\n                fullWidth \n                label=\"Senha\" \n                id=\"fullWidth\" \n               /> \n               <TextField \n                className = {classes.textBox} \n                value={postCheckPassword}\n                onChange={(e) => setPostCheckPassword(e.target.value)}\n                fullWidth\n                label=\"Confirmar senha\" \n                id=\"fullWidth\" \n               />\n                  <Button \n                    className= {classes.buttonContinue} \n                    variant=\"contained\" \n                    id = \"buttonForm\" \n                    onClick={postData}\n                  >\n                    Continuar\n                  </Button>\n             </Box>\n        </div>\n    );\n}\n\nexport default Registration;"]},"metadata":{},"sourceType":"module"}